" don't emulate vi bugs (must be first; has side effects)
set nocompatible


" # Display

" don't break words in middle
set linebreak
" show incomplete paragraphs even when they don't fit on screen (avoid @'s)
set display+=lastline
" always show ruler
set ruler
" turn on syntax hilighting
syntax on

set number " show line numbers

set hidden

runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

set background=dark
" colorscheme solarized

" --------------------
" Indentation and Tabs
" --------------------
set ts=2
	" set tabstop to 4 spaces
set shiftwidth=2
	" make >> shift 4, not 8
set shiftround
	" round to nearest 4, don't just move 4
set expandtab
    " no tabs only spaces!!
set noautoindent
set nosmartindent
  " Don't you mean stupidindent? In all seriousness, 'smartindent' is an obsolete option for C-like syntax. It has been replaced with 'cindent', 
  " and setting 'cindent' also overrides 'smartindent'. Vim has indentation support for many languages out-of-the-box, and setting 'smartindent' 
  " (or 'cindent', for that matter) in your .vimrc might interfere with this. Use 'filetype indent on' and be happy.
filetype indent on
 
	" turn on vim's magical indenting...
inoremap # X#
	" ...but don't move # lines to the beginning.  see :help smartindent

" -----------
" Folding
" -----------
set foldenable
set foldmethod=syntax
set foldlevel=4
	" turn on folding

" -----------
" Spell Check
" -----------
map <F6> <Esc>:setlocal spell spelllang=en_us<CR>
map <F7> <Esc>:setlocal spell spelllang=es_es<CR>
map <F8> <Esc>:setlocal nospell<CR>
	" map some keys to control it:
	" 	F6 - on for English
	" 	F7 - on for Spanish
	" 	F8 - off
au BufNewFile,BufRead *.en.txt set spell
au BufNewFile,BufRead *.es.txt set spelllang=es_es
	" turn it on by default for certain files
	" files with extension .es.txt automatically spellchecked in Spanish
	"
" ----------------
" GNU Screen Stuff 
" ----------------
" Prerequisite: in .screenrc put the following line:
"   setenv SCREEN_RUNNING 1
" The following will update the window title
" NOTE: Commenting until I can figure out a way to store the old title and get
"       it back instead of reverting to bash
" if $SCREEN_RUNNING
" 	au BufEnter * if expand('<afile>') != "" | silent !screen -X title "vim: <afile>:p:."
" 	au VimLeave * silent !screen -X title "bash"
" endif
" 
" ------------------
" Backup File Tweaks
" ------------------
au BufWrite /private/tmp/crontab.* set nowritebackup
	" don't write backup file when called by "crontab -e"; it breaks
au BufWrite /private/etc/pw.* set nowritebackup
	" same for "chpass"; breaks if backups written

" -----------
" Keybindings
" -----------
nnoremap - o<esc>
nnoremap _ O<esc>
	" make - and _ work like o and O without leaving you stuck in insert mode.
map <up> gk
imap <up> <C-o>gk
map <down> gj
imap <down> <C-o>gj
map <home> g<home>
imap <home> <C-o>g<home>
map <end> g<end>
imap <end> <C-o>g<end>
	" make up, down, home and end keys work intuitively for long paragraphs

" ----------------
" Search
" ----------------
set ignorecase
set smartcase
	" This will have searches ignore case unless I use a capital letter
set incsearch
	" Start searching right away

command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
	 	\ | wincmd p | diffthis

